name: Generate Commits HTML

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Code ophalen
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 0 = volledige geschiedenis ophalen; 50 = laatste 50 commits ophalen;
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Genereer commits HTML
        run: |
          set -e
          out=GeneratedCommits.html

          cat > "$out" <<'HTML'
          <html><head><title>Generated Commits</title><link rel="stylesheet" href="css.css"></head><body><h1>Commits</h1>
          HTML

          # Latest pull request (merge) commits grouped by merged branch
          echo "<h2>Latest Pull Request Commits</h2>" >> "$out"

          # For each merge commit: extract SHA, date, author, subject. Then
          # find parents and list the commits that were merged (commits reachable
          # from the merge commit but not from the first parent).
          git log --merges --pretty=format:"%H|%ad|%an|%s" --date=format:'%Y-%m-%d %H:%M' | while IFS='|' read -r sha date author subject; do
            # Try to extract the branch name from the merge subject (e.g. "from owner/branch")
            branch=$(echo "$subject" | sed -n "s/.* from \(.*\)/\1/p")
            if [ -z "$branch" ]; then
              # fallback: use the full subject if no branch text is found
              branch="$subject"
            fi

            # Write the branch/merge heading
            echo "<h2>$branch</h2>" >> "$out"
            echo "<ul>" >> "$out"

            # Determine parents of the merge commit. The output is: <sha> <p1> <p2>
            parents=$(git rev-list --parents -n 1 "$sha")
            set -- $parents
            # $1 = merge sha, $2 = parent1 (target/main), $3 = parent2 (source/branch)
            parent1=$2
            parent2=$3

            if [ -n "$parent1" ] && [ -n "$parent2" ]; then
              # List commits that came from the merged branch (commits reachable from parent2 but not from parent1)
              git log "$parent1".."$parent2" --pretty=format:"<li>%ad - %an: %s</li>" --date=format:'%Y-%m-%d %H:%M' >> "$out" || true
            else
              # If something unexpected happened, show the merge commit itself
              echo "<li>$date - $author: $subject</li>" >> "$out"
            fi

            echo "</ul>" >> "$out"
          done

          echo "</body></html>" >> "$out"


      - name: Commit en push HTML
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add GeneratedCommits.html
          git commit -m "Update GeneratedCommits.html" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
